[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "pydto"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
license = "MIT"
authors = [
    { name = "Kostia Tarnashynskyi", email = "kostia.tarnashynskyi@gmail.com" },
]
maintainers = [
    { name = "Kostia Tarnashynskyi", email = "kostia.tarnashynskyi@gmail.com" },
]
keywords = [
    "pydantic",
    "dto",
    "python",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.11"
dependencies = [
    "pydantic>=2.11.7",
    "pyright>=1.1.405",
]

[project.urls]
Homepage = "https://github.com/kostia-tarnashynskyi/pydto"
Documentation = "https://github.com/kostia-tarnashynskyi/pydto#readme"
Repository = "https://github.com/kostia-tarnashynskyi/pydto"

[tool.hatch.build.targets.wheel]
packages = ["src/pydto"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/README.md",
    "/LICENSE",
]

[tool.ruff]
target-version = "py311"
line-length = 120
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["src/pydto"]
omit = ["*/tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]

[dependency-groups]
dev = [
    "pre-commit>=4.3.0",
    "pytest>=8.4.2",
    "pytest-cov>=6.3.0",
    "ruff>=0.12.12",
]
